<?php

/*
  $Id: application_top.php 1833 2008-01-30 22:03:30Z hpdl $

  osCommerce, Open Source E-Commerce Solutions
  http://www.oscommerce.com

  Copyright (c) 2008 osCommerce

  Released under the GNU General Public License
 */
// Set the level of error reporting
error_reporting(E_ERROR);

if ($_SERVER['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest') {
    $AJAX = true;
}
else
    $AJAX = false;

// Start the clock for the page parse time log
define('PAGE_PARSE_START_TIME', microtime());



// check support for register_globals
if (function_exists('ini_get') && (ini_get('register_globals') == false) && (PHP_VERSION < 4.3)) {
    exit('Server Requirement Error: register_globals is disabled in your PHP configuration. This can be enabled in your php.ini configuration file or in the .htaccess file in your catalog directory. Please use PHP 4.3+ if register_globals cannot be enabled on the server.');
}

// mail lib
require_once '../lib/swift_required.php';


// Set the local configuration parameters - mainly for developers
if (file_exists('includes/local/configure.php'))
    include('includes/local/configure.php');

// Include application configuration parameters
require('includes/configure.php');

// Define the project version
define('PROJECT_VERSION', 'osCommerce Online Merchant v2.2 RC2a');

// some code to solve compatibility issues
require(DIR_WS_FUNCTIONS . 'compatibility.php');

// set php_self in the local scope
$PHP_SELF = (isset($HTTP_SERVER_VARS['SCRIPT_NAME']) ? $HTTP_SERVER_VARS['SCRIPT_NAME'] : $HTTP_SERVER_VARS['PHP_SELF']);

// Used in the "Backup Manager" to compress backups
define('LOCAL_EXE_GZIP', '/usr/bin/gzip');
define('LOCAL_EXE_GUNZIP', '/usr/bin/gunzip');
define('LOCAL_EXE_ZIP', '/usr/local/bin/zip');
define('LOCAL_EXE_UNZIP', '/usr/local/bin/unzip');

// include the list of project filenames
require(DIR_WS_INCLUDES . 'filenames.php');

// include the list of project database tables
require(DIR_WS_INCLUDES . 'database_tables.php');

// customization for the design layout
define('BOX_WIDTH', 125); // how wide the boxes should be in pixels (default: 125)
// Define how do we update currency exchange rates
// Possible values are 'oanda' 'xe' or ''
define('CURRENCY_SERVER_PRIMARY', 'oanda');
define('CURRENCY_SERVER_BACKUP', 'xe');

// include the database functions
require(DIR_WS_FUNCTIONS . 'database.php');

// make a connection to the database... now
tep_db_connect() or die('Unable to connect to database server!');

// set application wide parameters
$configuration_query = tep_db_query('select configuration_key as cfgKey, configuration_value as cfgValue from ' . TABLE_CONFIGURATION);
while ($configuration = tep_db_fetch_array($configuration_query)) {
    define($configuration['cfgKey'], $configuration['cfgValue']);
}

//set quickbooks parameters
$quickbooks_configuration_query = tep_db_query('select configuration_key as cfgKey, configuration_value as cfgValue from ' . TABLE_QUICKBOOKS_CONFIG);
while ($quickbooks_configuration = tep_db_fetch_array($quickbooks_configuration_query)) {
    define($quickbooks_configuration['cfgKey'], $quickbooks_configuration['cfgValue']);
}


// define our general functions used application-wide
require(DIR_WS_FUNCTIONS . 'general.php');
require(DIR_WS_FUNCTIONS . 'html_output.php');

// initialize the logger class
require(DIR_WS_CLASSES . 'logger.php');

// include shopping cart class
require(DIR_WS_CLASSES . 'shopping_cart.php');

// check to see if php implemented session management functions - if not, include php3/php4 compatible session class
if (!function_exists('session_start')) {
    define('PHP_SESSION_NAME', 'osCAdminID');
    define('PHP_SESSION_PATH', '/');
    define('PHP_SESSION_SAVE_PATH', SESSION_WRITE_DIRECTORY);

    include(DIR_WS_CLASSES . 'sessions.php');
}

// define how the session functions will be used
require(DIR_WS_FUNCTIONS . 'sessions.php');

// set the session name and save path
//  tep_session_name('osCAdminID');
tep_session_save_path(SESSION_WRITE_DIRECTORY);

// set the session cookie parameters
if (function_exists('session_set_cookie_params')) {
    session_set_cookie_params(0, DIR_WS_ADMIN);
} elseif (function_exists('ini_set')) {
    ini_set('session.cookie_lifetime', '0');
    ini_set('session.cookie_path', DIR_WS_ADMIN);
}

// lets start our session
tep_session_start();

if ((PHP_VERSION >= 4.3) && function_exists('ini_get') && (ini_get('register_globals') == false)) {
    extract($_SESSION, EXTR_OVERWRITE + EXTR_REFS);
}

// set the language
if (!tep_session_is_registered('language') || isset($HTTP_GET_VARS['language'])) {
    if (!tep_session_is_registered('language')) {
        tep_session_register('language');
        tep_session_register('languages_id');
    }

    include(DIR_WS_CLASSES . 'language.php');
    $lng = new language();

    if (isset($HTTP_GET_VARS['language']) && tep_not_null($HTTP_GET_VARS['language'])) {
        $lng->set_language($HTTP_GET_VARS['language']);
    } else {
        $lng->get_browser_language();
    }

    $language = $lng->language['directory'];
    $languages_id = $lng->language['id'];
}
//echo tep_session_is_registered('admin');
// exit;
// redirect to login page if administrator is not yet logged in
if (!tep_session_is_registered('admin')) {
    $redirect = false;

    $current_page = basename($PHP_SELF);

    if ($current_page != FILENAME_LOGIN) {
        if (!tep_session_is_registered('redirect_origin')) {
            tep_session_register('redirect_origin');

            $redirect_origin = array('page' => $current_page,
                'get' => $HTTP_GET_VARS);
        }

        $redirect = true;
    }

    if ($redirect == true) {
        tep_redirect(tep_href_link(FILENAME_LOGIN));
    }

    unset($redirect);
} else {
    if ($admin['user_role'] == 'Factory' || $admin['user_role'] == 'Irl') {
        $current_page = basename($PHP_SELF);
        if ($current_page == FILENAME_DEFAULT) {
            tep_redirect(tep_href_link(FILENAME_ORDERS_TRACKING));
        }
        switch (true) {

            case ($current_page === FILENAME_ORDERS_TRACKING):
            case ($current_page === FILENAME_ORDERS_TRACKING_HISTORY):
            case ($current_page === FILENAME_LOGIN):
            case ($current_page === 'factory_order_popup.php'):
            case ($current_page === 'pdf_order.php'):
            case ($current_page === 'vendor_item_list.php'):
            case ($current_page === 'vendor_form.php'):
            case ($current_page === 'pdf_vendor_form.php'):
            case ($current_page === 'autocomplete.php'):
            case ($current_page === 'pdf_vendor_form.php'):

            case ($current_page === FILENAME_INVOICE_DETAIL):
            case ($current_page === FILENAME_INVOICING_CREATE):
            case ($current_page === FILENAME_INVOICING_EDIT):

            case ($current_page === FILENAME_INVOICING_DELETE):
            case ($current_page === FILENAME_INVOICE_PACK):
            case ($current_page === FILENAME_INVOICING_LIST):

            case ($current_page === FILENAME_LANGUAGE_FACTORY):
            case ($current_page === FILENAME_FACTORY_SOLD_SHIP):
            case ($current_page === FILENAME_PRINT_INVOICE):

            case ($current_page === FILENAME_PRINT_US_INVOICE):
            case ($current_page === 'stock_ajax_factory.php'):
            case ($current_page === 'product_price_ajax.php'):
            case ($current_page === 'check_form_create_invoice.php'):
            case ($current_page === 'pack_ajax.php'):
            case ($current_page === 'price_order_code_ajax.php'):
            case ($current_page === 'factory_custom_info.php'):
            case ($current_page === 'invoice_upload_photo.php'):
            case ($current_page === 'invoice_pack_create.php'):
            case ($current_page === 'invoice_pack_delete.php'):
            case ($current_page === 'invoice_pack_edit_from_edit.php'):
                break;

            default:
                tep_redirect(tep_href_link(FILENAME_ORDERS_TRACKING));
                break;
        }
    }
    if ($admin['user_role'] == 'Factory_User' ) {
        $current_page = basename($PHP_SELF);
        if ($current_page == FILENAME_DEFAULT) {
            tep_redirect(tep_href_link('fu_list_invoices.php?selected_box=fu_invoice'));
        }
        switch (true) {
            case ($current_page === FILENAME_LOGIN):
                
            case ($current_page === FILENAME_INVOICE_DETAIL_FU):
            case ($current_page === FILENAME_INVOICING_CREATE_FU):
            case ($current_page === FILENAME_INVOICING_EDIT_FU):

            case ($current_page === FILENAME_INVOICING_DELETE_FU):
            case ($current_page === FILENAME_INVOICE_PACK_FU):
            case ($current_page === FILENAME_INVOICING_LIST_FU):
            case ($current_page === FILENAME_FACTORY_SOLD_SHIP_FU):
            case ($current_page === FILENAME_FACTORY_ADDRESS_FU):
            case ($current_page === 'stock_ajax_factory.php'):
            case ($current_page === 'product_price_ajax.php'):
            case ($current_page === 'check_form_create_invoice.php'):
            case ($current_page === 'pack_ajax.php'):
            case ($current_page === 'price_order_code_ajax.php'):
            case ($current_page === 'factory_custom_info.php'):
            case ($current_page === 'invoice_upload_photo.php'):
            case ($current_page === 'invoice_pack_create.php'):
            case ($current_page === 'invoice_pack_delete.php'):
            case ($current_page === 'invoice_pack_edit_from_edit.php'):
            case ($current_page === 'fu_invoice_pack_create.php'):
                break;

            default:
                    tep_redirect(tep_href_link('fu_list_invoices.php?selected_box=fu_invoice'));
                break;
        }
    }
}

// include the language translations
require(DIR_WS_LANGUAGES . $language . '.php');
$current_page = basename($PHP_SELF);
if (file_exists(DIR_WS_LANGUAGES . $language . '/' . $current_page)) {
    include(DIR_WS_LANGUAGES . $language . '/' . $current_page);
}

// define our localization functions
require(DIR_WS_FUNCTIONS . 'localization.php');

// Include validation functions (right now only email address)
require(DIR_WS_FUNCTIONS . 'validations.php');

// setup our boxes
require(DIR_WS_CLASSES . 'table_block.php');
require(DIR_WS_CLASSES . 'box.php');

// START oscThumb
require(DIR_WS_CLASSES . 'oscthumb.php');
$oscthumb = new oscthumb;
$oscthumb->check_hash(); // Check if parameters have changed. Delete cache if yes.
// END oscThumb
// initialize the message stack for output messages
require(DIR_WS_CLASSES . 'message_stack.php');
$messageStack = new messageStack;

// split-page-results
require(DIR_WS_CLASSES . 'split_page_results.php');

// entry/item info classes
require(DIR_WS_CLASSES . 'object_info.php');

// email classes
require(DIR_WS_CLASSES . 'mime.php');
require(DIR_WS_CLASSES . 'email.php');

// file uploading class
require(DIR_WS_CLASSES . 'upload.php');

// calculate category path
if (isset($HTTP_GET_VARS['cPath'])) {
    $cPath = $HTTP_GET_VARS['cPath'];
} else {
    $cPath = '';
}

if (tep_not_null($cPath)) {
    $cPath_array = tep_parse_category_path($cPath);
    $cPath = implode('_', $cPath_array);
    $current_category_id = $cPath_array[(sizeof($cPath_array) - 1)];
} else {
    $current_category_id = 0;
}

// default open navigation box
if (!tep_session_is_registered('selected_box')) {
    tep_session_register('selected_box');
    $selected_box = 'configuration';
}

if (isset($HTTP_GET_VARS['selected_box'])) {
    $selected_box = $HTTP_GET_VARS['selected_box'];
}

// the following cache blocks are used in the Tools->Cache section
// ('language' in the filename is automatically replaced by available languages)
$cache_blocks = array(array('title' => TEXT_CACHE_CATEGORIES, 'code' => 'categories', 'file' => 'categories_box-language.cache', 'multiple' => true),
    array('title' => TEXT_CACHE_MANUFACTURERS, 'code' => 'manufacturers', 'file' => 'manufacturers_box-language.cache', 'multiple' => true),
    array('title' => TEXT_CACHE_ALSO_PURCHASED, 'code' => 'also_purchased', 'file' => 'also_purchased-language.cache', 'multiple' => true)
);

// check if a default currency is set
if (!defined('DEFAULT_CURRENCY')) {
    $messageStack->add(ERROR_NO_DEFAULT_CURRENCY_DEFINED, 'error');
}

// check if a default language is set
if (!defined('DEFAULT_LANGUAGE')) {
    $messageStack->add(ERROR_NO_DEFAULT_LANGUAGE_DEFINED, 'error');
}

if (function_exists('ini_get') && ((bool) ini_get('file_uploads') == false)) {
    $messageStack->add(WARNING_FILE_UPLOADS_DISABLED, 'warning');
}
if (isset($_GET['oID']) && $_GET['oID'] != '') {
    $chkProductVol = tep_db_query('select * from orders_products where orders_id=' . $_GET['oID'] . '');
    while ($chkProductVolRow = tep_db_fetch_array($chkProductVol)) {

        if ($chkProductVolRow['products_width'] == 0.00 && $chkProductVolRow['wstatus'] == 0) {
            $pWidth = tep_db_fetch_array(tep_db_query("select products_id, products_width from products where products_id=" . $chkProductVolRow['products_id'] . ""));
            tep_db_query("update orders_products set products_width=" . $pWidth['products_width'] . ", wstatus=1  where orders_products_id=" . $chkProductVolRow['orders_products_id'] . "");
        }
        if ($chkProductVolRow['products_height'] == 0.00 && $chkProductVolRow['hstatus'] == 0) {
            $pWidth = tep_db_fetch_array(tep_db_query("select products_id, products_height from products where products_id=" . $chkProductVolRow['products_id'] . ""));
            tep_db_query("update orders_products set products_height=" . $pWidth['products_height'] . ", hstatus=1  where orders_products_id=" . $chkProductVolRow['orders_products_id'] . "");
        }
        if ($chkProductVolRow['products_depth'] == 0.00 && $chkProductVolRow['dstatus'] == 0) {
            $pWidth = tep_db_fetch_array(tep_db_query("select products_id, products_depth from products where products_id=" . $chkProductVolRow['products_id'] . ""));
            tep_db_query("update orders_products set products_depth=" . $pWidth['products_depth'] . ", dstatus=1 where orders_products_id=" . $chkProductVolRow['orders_products_id'] . "");
        }
    }
}
?>